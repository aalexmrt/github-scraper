// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Repository {
  id                      Int                      @id @default(autoincrement())
  url                     String                   @unique
  pathName                String                   
  state                   String                   @default("pending") // "pending", "in_progress", "completed", "failed"
  lastAttempt             DateTime?                // Nullable for repositories that haven’t been processed
  lastProcessedAt         DateTime?                // Nullable for repositories that haven’t been successfully processed
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  contributors            RepositoryContributor[]  // Relation to RepositoryContributor
}

model Contributor {
  id                      Int                      @id @default(autoincrement())
  username                String?
  email                   String?                   
  profileUrl              String?
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
  repositories            RepositoryContributor[]  // Relation to RepositoryContributor
}

model RepositoryContributor {
  id                      Int                      @id @default(autoincrement())
  repository              Repository               @relation(fields: [repositoryId], references: [id])
  repositoryId            Int
  contributor             Contributor              @relation(fields: [contributorId], references: [id])
  contributorId           Int
  commitCount             Int                      @default(0)

  @@unique([repositoryId, contributorId]) // Composite unique constraint
}
